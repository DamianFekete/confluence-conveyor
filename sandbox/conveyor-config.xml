<?xml version="1.0"?>

<conveyor-config>
    <package namespace="/pages">
        <global-results>
            <result name="pagenotfound" type="dispatcher">/pages/pagenotfound.action</result>
            <result name="pagenotpermitted" type="chain">
                <param name="actionName">pagenotpermitted</param>
            </result>
        </global-results>
        
        <!-- Sets up "editpage" to be conveyored -->
        <conveyor-action name="editpage">
            <!-- These results will be rerouted back to the conveyor for further processing. -->
            <conveyor-result name="success"/>
            <conveyor-result name="cancel"/>
        </conveyor-action>
        
        <!-- Provides an alternate to the standard 'editpage' action -->
        <alt-action name="editpage" class="net.customware.confluence.plugin.scaffolding.actions.RedirectEditAction" method="doDefault">
            <interceptor-ref name="defaultStack"/>
            <result name="cnvr.original" type="dispatcher">/pages/cnvr.editpage.action</result>
            <result name="scaffold" type="redirect">
                <param name="location">/pages/scaffold/editscaffold.action?pageId=${pageId}</param>
                <param name="parse">true</param>
            </result>
        </alt-action>
        
        <action name="doeditpage" class="com.atlassian.confluence.pages.actions.EditPageAction" method="doEdit">
            <result name="error" type="velocity">/pages/editpage.vm</result>
            <result name="input" type="velocity">/pages/editpage.vm</result>
            <result name="cancel" type="chain">checkforscaff</result>
            <result name="success" type="chain">checkforscaff</result>
            <result name="preview" type="velocity">/pages/editpage-preview.vm</result>
            <result name="movehierarchy" type="redirect">/pages/handlenameconflicts.action?pageId=${pageId}</result>
        </action>
        
        <action name="docreatepage" class="com.atlassian.confluence.pages.actions.CreatePageAction" method="doAdd">
            <result name="error" type="velocity">/pages/createpage.vm</result>
            <result name="input" type="velocity">/pages/createpage.vm</result>
            <result name="cancel" type="redirect">${fromPageId == 0 ? "listpages-alphaview.action?key=" + spaceKey :
                @com.atlassian.confluence.util.GeneralUtil@getPageUrl(pageToReturnToOnCancel)}</result>
            <result name="success" type="chain">checkforscaff</result>
            <result name="preview" type="velocity">/pages/createpage-preview.vm</result>
        </action>
        
        <action name="saveeditpagebean" class="com.atlassian.confluence.pages.actions.EditPageAction" method="doSaveEditPageBean">
            <interceptor-ref name="defaultStack"/> <!-- by this stage, we would have already validated all data. switching validation off -->
            <result name="input" type="velocity">/pages/editpage.vm</result>
            <result name="success" type="chain">checkforscaff</result>
        </action>
        
        <action name="handlenameconflicts" class="com.atlassian.confluence.pages.actions.HandleNameConflictsAction" method="doDefault">
            <result name="input" type="velocity">/pages/handlenameconflicts.vm</result>
            <result name="success" type="redirect">/pages/saveeditpagebean.action?pageId=${pageId}</result>
            <result name="cancel" type="chain">checkforscaff</result>
        </action>
        
        <action name="dohandlenameconflicts" class="com.atlassian.confluence.pages.actions.HandleNameConflictsAction">
            <result name="input" type="dispatcher">/pages/handlenameconflicts.action</result>
            <!-- input result here means there are still name conflicts, restart the handle name conflicts process -->
            <result name="confirm" type="velocity">/pages/confirm-move-hierarchy.vm</result>
            <result name="success" type="redirect">/pages/saveeditpagebean.action?pageId=${pageId}</result>
            <result name="cancel" type="chain">checkforscaff</result>
        </action>
        
        <action name="checkforscaff" class="net.customware.confluence.plugin.scaffolding.actions.RedirectEditAction" method="doDefault">
            <interceptor-ref name="defaultStack"/>
            <result name="page" type="redirect">${@com.atlassian.confluence.util.GeneralUtil@getPageUrl(page)}</result>
            <result name="scaffold" type="redirect">
                <param name="location">/pages/scaffold/editscaffold.action?pageId=${pageId}</param>
                <param name="parse">true</param>
            </result>
        </action>
        
        <!-- An alternate location for the standard 'editpage' action -->
        <action name="alteditpage" class="com.atlassian.confluence.pages.actions.EditPageAction" method="doDefault">
            <interceptor-ref name="defaultStack"/>
            <result name="error" type="velocity">/pages/editpage.vm</result>
            <result name="input" type="velocity">/pages/editpage.vm</result>
            <result name="success" type="velocity">/pages/editpage.vm</result>
        </action>
        
        <action name="dorevertpagebacktoversion" class="net.customware.confluence.plugin.scaffolding.actions.RevertMetadataBackToVersionAction" method="doRevertBack">
            <result name="error" type="velocity">/pages/revertpagebacktoversion.vm</result>
            <result name="input" type="velocity">/pages/revertpagebacktoversion.vm</result>
            <result name="cancel" type="redirect">/pages/viewpreviouspageversions.action?pageId=${page.id}</result>
            <result name="success" type="redirect">${page.urlPath}</result>
        </action>
        
    </package>
    
    <package name="scaffold" extends="default" namespace="/pages/scaffold">
        <default-interceptor-ref name="validatingStack"/>
        
        <global-results>
            <result name="pagenotfound" type="dispatcher">/pages/pagenotfound.action</result>
            <result name="pagenotpermitted" type="chain">
                <param name="actionName">pagenotpermitted</param>
                <param name="namespace">/pages</param>
            </result>
        </global-results>
        
        <action name="editscaffold" class="net.customware.confluence.plugin.scaffolding.actions.EditScaffoldAction" method="doDefault">
            <interceptor-ref name="defaultStack"/>
            <result name="error" type="velocity">/net/customware/confluence/plugin/scaffolding/actions/editscaffold.vm</result>
            <result name="input" type="velocity">/net/customware/confluence/plugin/scaffolding/actions/editscaffold.vm</result>
            <result name="success" type="velocity">/net/customware/confluence/plugin/scaffolding/actions/editscaffold.vm</result>
            <result name="original" type="redirect">
                <param name="location">/pages/alteditpage.action?pageId=$pageId</param>
                <param name="parse">true</param>
            </result>
        </action>
        
        <action name="doeditscaffold" class="net.customware.confluence.plugin.scaffolding.actions.EditScaffoldAction" method="doEdit">
            <result name="error" type="velocity">/net/customware/confluence/plugin/scaffolding/actions/editscaffold.vm</result>
            <result name="input" type="velocity">/net/customware/confluence/plugin/scaffolding/actions/editscaffold.vm</result>
            <result name="cancel" type="redirect">${@com.atlassian.confluence.util.GeneralUtil@getPageUrl(page)}</result>
            <result name="success" type="redirect">${@com.atlassian.confluence.util.GeneralUtil@getPageUrl(page)}</result>
            <result name="preview" type="velocity">/pages/editpage-preview.vm</result>
            <result name="movehierarchy" type="redirect">/pages/handlenameconflicts.action?pageId=${pageId}</result>
            <result name="original" type="redirect">
                <param name="location">/pages/alteditpage.action?pageId=${pageId}</param>
                <param name="parse">true</param>
            </result>
        </action>
        
        <action name="editversion" class="net.customware.confluence.plugin.scaffolding.actions.EditScaffoldAction" method="doEditVersion">
            <result name="success" type="velocity-xml">/net/customware/confluence/plugin/scaffolding/actions/editVersion.xml</result>
            <result name="error" type="velocity-xml">/net/customware/confluence/plugin/scaffolding/actions/error.xml</result>
            <result name="pagenotpermitted" type="velocity-xml">/net/customware/confluence/plugin/scaffolding/actions/pageNotPermittedError.xml</result>
        </action>
        
        <action name="preview" class="net.customware.confluence.plugin.scaffolding.actions.PreviewScaffoldAction" method="doDefault">
            <interceptor-ref name="defaultStack"/>
            <result name="success" type="velocity-xml">/net/customware/confluence/plugin/scaffolding/actions/preview.xml</result>
            <result name="error" type="velocity-xml">/net/customware/confluence/plugin/scaffolding/actions/error.xml</result>
            <result name="pagenotpermitted" type="velocity-xml">/net/customware/confluence/plugin/scaffolding/actions/pageNotPermittedError.xml</result>
        </action>
        
        <action name="viewxml" class="net.customware.confluence.plugin.scaffolding.actions.ViewXmlAction">
            <result name="success" type="velocity-xml">/net/customware/confluence/plugin/scaffolding/actions/viewxml.vm</result>
        </action>
    </package>
</conveyor-config>